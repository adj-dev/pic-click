{"version":3,"sources":["assets/images/abstract1.jpg","assets/images/abstract2.jpg","assets/images/abstract3.jpg","assets/images/abstract4.png","assets/images/abstract5.jpg","assets/images/abstract6.jpg","assets/images/abstract7.jpg","assets/images/abstract8.jpeg","assets/images/abstract9.jpg","assets/images/abstract10.jpg","assets/images/abstract11.jpg","assets/images/abstract12.jpeg","components/Header.js","components/Image.js","assets/index.js","components/Images.js","index.js","App.js"],"names":["module","exports","__webpack_require__","p","Header","_ref","score","highScore","message","react_default","a","createElement","id","Image","src","onClick","reset","_useState","useState","_useState2","Object","slicedToArray","clicked","setClicked","style","backgroundImage","concat","useEffect","className","assets","require","Images","clickHandler","setReset","handleClick","clickedTwice","images","array","i","length","j","Math","floor","random","_ref2","randomizeImages","imagesArray","map","image","key","ReactDOM","render","setScore","_useState3","_useState4","sethighScore","_useState5","_useState6","setMessage","Fragment","document","getElementById"],"mappings":"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","file":"static/js/main.c5d310ea.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/abstract1.75b05046.jpg\";","module.exports = __webpack_public_path__ + \"static/media/abstract2.52210a7c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/abstract3.ca4f502b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/abstract4.c4e2b997.png\";","module.exports = __webpack_public_path__ + \"static/media/abstract5.60b58194.jpg\";","module.exports = __webpack_public_path__ + \"static/media/abstract6.5c0c195f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/abstract7.17065298.jpg\";","module.exports = __webpack_public_path__ + \"static/media/abstract8.25fda415.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/abstract9.6f1ad92d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/abstract10.e8190e5f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/abstract11.e2bc4090.jpg\";","module.exports = __webpack_public_path__ + \"static/media/abstract12.0a06d5fa.jpeg\";","import React from 'react'\n\n// This is the most simple of all the components, literally just renders props from the parent\nexport default function Header({ score, highScore, message }) {\n  return (\n    <header>\n      <div id=\"logo\">\n        <h1>Pic-click</h1>\n      </div>\n      <div id=\"message\">\n        <span>{message}</span>\n      </div>\n      <div id=\"scoreboard\">\n        <span>Current score: </span>\n        <span id=\"currentScore\">{score}</span>\n        <span> High score: </span>\n        <span id=\"highScore\">{highScore}</span>\n      </div>\n    </header>\n  )\n}\n","import React, { useState, useEffect } from 'react'\n\nexport default function Image({ src, id, onClick, reset }) {\n  const [clicked, setClicked] = useState(false)\n  const style = {\n    backgroundImage: `url(${src})`\n  }\n\n  // Handles the click event triggers in this very component \n  // (technically in one of the twelve instances of this component)\n  const handleClick = () => {\n    setClicked(clicked ? false : true)\n    // Calls the parent's click handler with the value of `clicked`. Notice that\n    // this won't be fired when the component intially renders and so our initial\n    // state of `clicked = false` doesn't affect this function call. \n    onClick(clicked)\n  }\n\n  // If the `onClick()` method above gets called with `false` then the parent component\n  // will send us `reset = true`. This is the app telling every instance of the `Image`\n  // component to reset the value of `clicked` to false\n  useEffect(() => {\n    if (reset) {\n      setClicked(false)\n    }\n  }, [reset])\n\n  return <div style={style} className=\"image-div\" id={id} onClick={handleClick}></div>\n}\n","export default [\n  {\n    src: require('./images/abstract1.jpg'),\n    id: \"1\"\n  },\n  {\n    src: require('./images/abstract2.jpg'),\n    id: \"2\"\n  },\n  {\n    src: require('./images/abstract3.jpg'),\n    id: \"3\"\n  },\n  {\n    src: require('./images/abstract4.png'),\n    id: \"4\"\n  },\n  {\n    src: require('./images/abstract5.jpg'),\n    id: \"5\"\n  },\n  {\n    src: require('./images/abstract6.jpg'),\n    id: \"6\"\n  },\n  {\n    src: require('./images/abstract7.jpg'),\n    id: \"7\"\n  },\n  {\n    src: require('./images/abstract8.jpeg'),\n    id: \"8\"\n  },\n  {\n    src: require('./images/abstract9.jpg'),\n    id: \"9\"\n  },\n  {\n    src: require('./images/abstract10.jpg'),\n    id: \"10\"\n  },\n  {\n    src: require('./images/abstract11.jpg'),\n    id: \"11\"\n  },\n  {\n    src: require('./images/abstract12.jpeg'),\n    id: \"12\"\n  }\n]","import React, { useState, useEffect } from 'react'\nimport Image from './Image'\nimport imagesArray from '../assets'\n\nexport default function Images({ clickHandler }) {\n  /*\n  The idea behind `reset` was initially inspired by a desire to avoid using an\n  array to hold individual state for each instance of the child component. \n  Alternatively, reset is a Boolean that is initially set to `false` and \n  passed down to each instance of the child component. As soon as one child \n  component is clicked more than once the value of `reset` is changed to \n  `true`: this triggers a function in each instance of the child component to \n  reset the value of `clicked` to `false`. Using this method, all components \n  are able to hold \"local\" state while also maintaining the ability to reset \n  simutaneously based on a click event from only one of the instances.\n\n  All of this for slighly cleaner code ;)\n  */\n  const [reset, setReset] = useState(false)\n\n  // Borrowed from the Fisher-Yates shuffle algorithm\n  // https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle#The_modern_algorithm\n  const randomizeImages = array => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  }\n\n  // Handles the click event triggered by the `Image` component (a direct child)\n  const handleClick = clickedTwice => {\n    // If the image has been clicked more than once `reset` is set to `true`\n    // and the parent's click handler is called with `true`\n    if (clickedTwice) {\n      setReset(true)\n      return clickHandler(true)\n    }\n    // Otherwise, simply call the parent's click handler with `false`\n    clickHandler(false)\n  }\n\n  // Randomizes the order of the images array every time the component re-renders \n  let images = randomizeImages(imagesArray)\n\n  // Returns the value of `reset` to `false` after the value of `reset` changes, \n  // but interestingly not before sending a value of `true` to the child component\n  useEffect(() => {\n    if (reset) setReset(false)\n  }, [reset])\n\n  return (\n    <div className=\"container\">\n      {images.map(image => (\n        <Image src={image.src} id={image.id} onClick={handleClick} key={image.id} reset={reset} />\n      ))}\n    </div>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React, { useState } from 'react'\nimport Header from './components/Header'\nimport Images from './components/Images'\n\n/*\nThis is what I consider to be the top level component so I'll write here about how I handled state \nthroughout this application. As you can see, I chose to use hooks in functional components vs. class\ncomponents. This is due to multiple factors: \n  1)  Hooks have been shown to improve performance by reducing the overall package size,\n      although I admit that it won't make too much of a difference in a small application \n      such as this one.\n  2)  Functional components with hooks allow the same component to be written with cleaner \n      and more concise code.\n  3)  I have built small React apps with class components before, and so I was interested in \n      using a technology with which I had no prior experience.\n*/\n\nexport default function App() {\n  const [score, setScore] = useState(0)\n  const [highScore, sethighScore] = useState(0)\n  const [message, setMessage] = useState('');\n\n  // Handles the click event which is trigger by the `Image` component \n  // and passed through the `Images` component\n  const handleClick = clickedTwice => {\n    // Resets the score if image has been clicked twice\n    if (clickedTwice) {\n      setScore(0)\n      return setMessage('Incorrect!')\n    }\n    // Otherwise, increment the score (and high score if appropriate)\n    // and set the game message\n    setScore(score + 1)\n    sethighScore(score >= highScore ? highScore + 1 : highScore)\n    setMessage('Correct')\n  }\n\n  // Utilized a JSX fragment (<></>)to compensate React's parsing requirements\n  return (\n    <>\n      <Header score={score} highScore={highScore} message={message} />\n      <Images clickHandler={handleClick} />\n    </>\n  )\n}\n"],"sourceRoot":""}